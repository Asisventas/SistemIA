// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SistemIA.Models;

#nullable disable

namespace SistemIA.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250609163014_AgregarEntidadMarca")]
    partial class AgregarEntidadMarca
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SistemIA.Models.Ciudades", b =>
                {
                    b.Property<int>("IdCiudad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCiudad"));

                    b.Property<string>("Departamento")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdCiudad");

                    b.ToTable("Ciudades", (string)null);
                });

            modelBuilder.Entity("SistemIA.Models.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCliente"));

                    b.Property<string>("CodigoPais")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Contacto")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("DV")
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Email")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool>("EsExtranjero")
                        .HasColumnType("bit");

                    b.Property<string>("Estado")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCiudad")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoContribuyente")
                        .HasColumnType("int");

                    b.Property<decimal?>("LimiteCredito")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int?>("PlazoDiasCredito")
                        .HasColumnType("int");

                    b.Property<bool>("PrecioDiferenciado")
                        .HasColumnType("bit");

                    b.Property<string>("RUC")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("RazonSocial")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<decimal>("Saldo")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Timbrado")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("TipoDocumento")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("TipoOperacion")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<DateTime?>("VencimientoTimbrado")
                        .HasColumnType("datetime2");

                    b.HasKey("IdCliente");

                    b.HasIndex("CodigoPais");

                    b.HasIndex("IdCiudad");

                    b.HasIndex("IdTipoContribuyente");

                    b.HasIndex("TipoDocumento");

                    b.HasIndex("TipoOperacion");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("SistemIA.Models.Marca", b =>
                {
                    b.Property<int>("IdMarca")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_Marca");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMarca"));

                    b.Property<string>("NombreMarca")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Marca");

                    b.HasKey("IdMarca");

                    b.ToTable("Marcas");
                });

            modelBuilder.Entity("SistemIA.Models.Paises", b =>
                {
                    b.Property<string>("CodigoPais")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CodigoPais");

                    b.ToTable("Paises");
                });

            modelBuilder.Entity("SistemIA.Models.Proveedor", b =>
                {
                    b.Property<int>("Id_Proveedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Proveedor"));

                    b.Property<int?>("CodigoContribuyente")
                        .HasColumnType("int");

                    b.Property<string>("CodigoProveedor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contacto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DV")
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstadoProveedor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("FotoLogo")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("IdTipoContribuyente")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RUC")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rubro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Timbrado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("VencimientoTimbrado")
                        .HasColumnType("datetime2");

                    b.HasKey("Id_Proveedor");

                    b.HasIndex("IdTipoContribuyente");

                    b.ToTable("Proveedores");
                });

            modelBuilder.Entity("SistemIA.Models.Rol", b =>
                {
                    b.Property<int>("Id_Rol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Rol"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("NombreRol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Rol");

                    b.ToTable("Rol");
                });

            modelBuilder.Entity("SistemIA.Models.Sucursal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Automatizado")
                        .HasColumnType("bit");

                    b.Property<string>("CertificadoPassword")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CertificadoRuta")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Conexion")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Correo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("DV")
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("IdCiudad")
                        .HasMaxLength(100)
                        .HasColumnType("int");

                    b.Property<string>("IpConsola")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<byte[]>("Logo")
                        .HasColumnType("VARBINARY(MAX)");

                    b.Property<string>("NombreEmpresa")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("NombreSucursal")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("NumSucursal")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nchar(7)")
                        .IsFixedLength();

                    b.Property<string>("PuertoConsola")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("PuntoExpedicion")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("RUC")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nchar(8)")
                        .IsFixedLength();

                    b.Property<string>("RubroEmpresa")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool>("SistemaPlaya")
                        .HasColumnType("bit");

                    b.Property<string>("Telefono")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("IdCiudad");

                    b.ToTable("Sucursal", (string)null);
                });

            modelBuilder.Entity("SistemIA.Models.TipoOperacion", b =>
                {
                    b.Property<string>("Codigo")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Comentario")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Codigo");

                    b.ToTable("TiposOperacion");
                });

            modelBuilder.Entity("SistemIA.Models.TiposContribuyentes", b =>
                {
                    b.Property<int>("IdTipoContribuyente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTipoContribuyente"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreTipo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdTipoContribuyente");

                    b.ToTable("TiposContribuyentes");
                });

            modelBuilder.Entity("SistemIA.Models.TiposDocumentosIdentidad", b =>
                {
                    b.Property<string>("TipoDocumento")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("TipoDocumento");

                    b.ToTable("TiposDocumentosIdentidad");
                });

            modelBuilder.Entity("Usuario", b =>
                {
                    b.Property<int>("Id_Usu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Usu"));

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CI")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Ciudad")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("Comision")
                        .HasColumnType("decimal(18,2)");

                    b.Property<byte[]>("ContrasenaHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<decimal?>("Descuento")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Direccion")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("Estado_Usu")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha_Ingreso")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Fecha_Nacimiento")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Foto")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("HuellaDigital")
                        .HasColumnType("varbinary(max)");

                    b.Property<decimal?>("IPS")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Id_Rol")
                        .HasColumnType("int");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("Salario")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("UsuarioNombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id_Usu");

                    b.HasIndex("Id_Rol");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("SistemIA.Models.Cliente", b =>
                {
                    b.HasOne("SistemIA.Models.Paises", "Pais")
                        .WithMany("Clientes")
                        .HasForeignKey("CodigoPais")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemIA.Models.Ciudades", "Ciudad")
                        .WithMany("Clientes")
                        .HasForeignKey("IdCiudad")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemIA.Models.TiposContribuyentes", "TipoContribuyente")
                        .WithMany("Clientes")
                        .HasForeignKey("IdTipoContribuyente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemIA.Models.TiposDocumentosIdentidad", "TipoDocumentoIdentidad")
                        .WithMany("Clientes")
                        .HasForeignKey("TipoDocumento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemIA.Models.TipoOperacion", "TipoOperacionNavigation")
                        .WithMany("Clientes")
                        .HasForeignKey("TipoOperacion");

                    b.Navigation("Ciudad");

                    b.Navigation("Pais");

                    b.Navigation("TipoContribuyente");

                    b.Navigation("TipoDocumentoIdentidad");

                    b.Navigation("TipoOperacionNavigation");
                });

            modelBuilder.Entity("SistemIA.Models.Proveedor", b =>
                {
                    b.HasOne("SistemIA.Models.TiposContribuyentes", "TipoContribuyente")
                        .WithMany()
                        .HasForeignKey("IdTipoContribuyente");

                    b.Navigation("TipoContribuyente");
                });

            modelBuilder.Entity("SistemIA.Models.Sucursal", b =>
                {
                    b.HasOne("SistemIA.Models.Ciudades", "Ciudad")
                        .WithMany("Sucursales")
                        .HasForeignKey("IdCiudad")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ciudad");
                });

            modelBuilder.Entity("Usuario", b =>
                {
                    b.HasOne("SistemIA.Models.Rol", "Rol")
                        .WithMany("Usuarios")
                        .HasForeignKey("Id_Rol")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("SistemIA.Models.Ciudades", b =>
                {
                    b.Navigation("Clientes");

                    b.Navigation("Sucursales");
                });

            modelBuilder.Entity("SistemIA.Models.Paises", b =>
                {
                    b.Navigation("Clientes");
                });

            modelBuilder.Entity("SistemIA.Models.Rol", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("SistemIA.Models.TipoOperacion", b =>
                {
                    b.Navigation("Clientes");
                });

            modelBuilder.Entity("SistemIA.Models.TiposContribuyentes", b =>
                {
                    b.Navigation("Clientes");
                });

            modelBuilder.Entity("SistemIA.Models.TiposDocumentosIdentidad", b =>
                {
                    b.Navigation("Clientes");
                });
#pragma warning restore 612, 618
        }
    }
}

@page "/menu-usuarios"
@using SistemIA.Models
@using Microsoft.EntityFrameworkCore
@inject AppDbContext Db
@inject NavigationManager Navigation

<h3 class="mb-4">👤 Usuarios del Sistema</h3>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger">@errorMessage</div>
}
else if (usuarios is null)
{
    <p><em>Cargando...</em></p>
}
else
{
    <div class="mb-3 d-flex justify-content-end">
        <button class="btn btn-success" @onclick="RegistrarUsuario">
            <i class="bi bi-person-plus"></i> Registrar Usuario
        </button>
    </div>
    <table class="table table-striped table-hover align-middle">
        <thead class="table-dark">
            <tr>
                <th>Id</th>
                <th>Nombres</th>
                <th>Apellidos</th>
                <th>Correo</th>
                <th>Usuario</th>
                <th>Rol</th>
                <th>Estado</th>
                <th class="text-center">Opciones</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var u in usuarios)
            {
                <tr>
                    <td>@u.Id_Usu</td>
                    <td>@u.Nombres</td>
                    <td>@u.Apellidos</td>
                    <td>@u.Correo</td>
                    <td>@u.UsuarioNombre</td>
                    <td>@u.Rol?.NombreRol</td>
                    <td>
                        @if (u.Estado_Usu)
                        {
                            <span class="badge bg-success">Activo</span>
                        }
                        else
                        {
                            <span class="badge bg-secondary">Inactivo</span>
                        }
                    </td>
                    <td class="text-center">
                        <button class="btn btn-sm btn-outline-primary me-1" @onclick="() => EditarUsuario(u.Id_Usu)">
                            <i class="bi bi-pencil"></i> Editar
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <!-- Paginación simple -->
    <div class="d-flex justify-content-between mt-3">
        <button class="btn btn-secondary" @onclick="PaginaAnterior" disabled="@(!puedeRetroceder)">
            ◀ Anterior
        </button>
        <span>Página @paginaActual de @totalPaginas</span>
        <button class="btn btn-secondary" @onclick="PaginaSiguiente" disabled="@(!puedeAvanzar)">
            Siguiente ▶
        </button>
    </div>
}

@code {
    private List<Usuario>? usuarios;
    private string? errorMessage;

    private int paginaActual = 1;
    private int tamanioPagina = 15;
    private int totalRegistros = 0;
    private int totalPaginas = 1;

    private bool puedeAvanzar => paginaActual < totalPaginas;
    private bool puedeRetroceder => paginaActual > 1;

    protected override async Task OnInitializedAsync()
    {
        await CargarUsuariosAsync();
    }

    private async Task CargarUsuariosAsync()
    {
        try
        {
            totalRegistros = await Db.Usuarios.CountAsync();
            totalPaginas = (int)Math.Ceiling(totalRegistros / (double)tamanioPagina);

            usuarios = await Db.Usuarios
                .Include(u => u.Rol)
                .OrderBy(u => u.Nombres)
                .Skip((paginaActual - 1) * tamanioPagina)
                .Take(tamanioPagina)
                .ToListAsync();
        }
        catch (Exception ex)
        {
            errorMessage = "No se pudo cargar la lista de usuarios.";
            Console.WriteLine($"[ERROR] {ex.Message}");
        }
    }

    private async void PaginaSiguiente()
    {
        if (puedeAvanzar)
        {
            paginaActual++;
            await CargarUsuariosAsync();
            StateHasChanged();
        }
    }

    private async void PaginaAnterior()
    {
        if (puedeRetroceder)
        {
            paginaActual--;
            await CargarUsuariosAsync();
            StateHasChanged();
        }
    }

    private void RegistrarUsuario()
    {
        Navigation.NavigateTo("/Usuarios/CrearUsuario");
    }

    private void EditarUsuario(int id)
    {
        Navigation.NavigateTo($"/usuarios/editarUsu/{id}");
    }
}
